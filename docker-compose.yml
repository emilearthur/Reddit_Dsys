version: '3.9'
services:
  server:
    container_name: 'backend-server'
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/backend/
    command: bash -c "alembic upgrade head  && uvicorn app.api.server:app --reload --workers 1 --host 0.0.0.0 --port 8000"
    env_file:
      - ./backend/.env
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis
  db:
    container_name: 'postgres-database'
    image: postgres:12.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432

  # rabbitmq:
  #   container_name: 'rabbitmq'
  #   image: rabbitmq:3-management-alpine
  #   volumes:
  #       - ./rabbitmq/data:/var/etc/rabbitmq
  #       - ./rabbitmq/data:/var/lib/rabbitmq/data
  #       - ./rabbitmq/logs:/var/log/rabbitmq/log
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   ports:
  #       - 5672:5672
  #       - 15672:15672

  redis:
    container_name: 'redis'
    image: redis:alpine


  redisinsight:
    container_name: 'redis-insight'
    image: redislabs/redisinsight
    ports:
      - 8001:8001
    volumes:
      - redisinsight:/db

  scrapper_worker:
    container_name: 'scrapper_worker'
    build: ./backend
    volumes: 
      - ./backend/:/backend/
    env_file:
      - ./backend/.env
    command: bash -c "celery -A tasks worker -B -l INFO --loglevel=info --logfile=logs/celery.log"
    depends_on:
      - server
      - db
      - redis


  flower:
    container_name: 'flower'
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes: 
      - ./backend/:/backend/
    command: celery -A tasks flower --port=5555
    ports:
      - 5555:5555
    depends_on:
      - scrapper_worker
    restart: on-failure


volumes:
    postgres_data:
    redis-data:
    redisinsight: